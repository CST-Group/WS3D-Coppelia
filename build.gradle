/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library-distribution'
    id 'maven-publish'
    id 'application'
}

group = 'com.github.CST-Group'

description = "WS3D-Coppelia"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.2'

repositories {
    flatDir {
        dirs 'libs'
        dirs '../cst/build/libs'
    }
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/release"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation group: 'org.zeromq', name: 'jeromq', version:'0.5.2'

    implementation group: 'co.nstant.in', name: 'cbor', version:'0.9'

   //implementation 'com.github.CST-Group:cst-desktop:1.0.4'
    implementation 'com.github.CST-Group:cst:1.3.0'

    implementation fileTree(dir: 'libs', include: '*.jar')
}

application {
    // Define the main class for the application.
    mainClass = 'Demo.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts
{
    //archives javadocJar, sourcesJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

javadoc {
    exclude 'Demo'
    exclude 'WS3DCoppelia.NativeUtils'
}

distTar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

distZip {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}