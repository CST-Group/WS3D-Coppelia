/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library-distribution'
}

description = "WS3D-Coppelia"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.1'

repositories {
    flatDir {
        dirs 'libs'
        dirs '../cst/build/libs'
    }
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/release"
    }
    maven {
        url "https://repository.springsource.com/maven/bundles/external"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'org.zeromq', name: 'jeromq', version:'0.5.2'

    implementation group: 'co.nstant.in', name: 'cbor', version:'0.9'

   implementation 'com.github.CST-Group:cst-desktop:1.0.4'

    implementation fileTree(dir: 'libs', include: '*.jar')
}

//application {
    // Define the main class for the application.
    //mainClass = 'Demo.App'
//}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts
{
    //archives javadocJar, sourcesJar
    archives sourcesJar
}
